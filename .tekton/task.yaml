apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: gitsecure-discovery-task
spec:
  inputs:
    params:
      - name: task-pvc
        description: the output pvc
      - name: repository
        description: the git repo
      - name: revision
        description: the revision
        default: master
  steps:
    - name: clone-repo
      image: alpine/git
      env:
        - name: REPOSITORY
          value: $(inputs.params.repository)
        - name: REVISION
          value: $(inputs.params.revision)
      command: ["/bin/sh", "-c"]
      args:
        - set -e -o pipefail;
          echo "Cloning $REPOSITORY";
          git clone -q -b $REVISION $REPOSITORY .;
          ls -la .;
    - name: discovery
      image: shri4u/rig:0.4
      command:
        - /go/src/github.ibm.com/rig/rig-app
      args:
        - "-giturl"
        -  $(inputs.params.repository)
        - "-gitbranch"
        -  $(inputs.params.revision)
        - "-repodir"
        -  "/workspace"
        - "-dburl"
        - "bolt://169.47.180.157:30687"
        - "-clairapi"
        - "http://169.47.180.148:30890"
        - "-pysafetyapi"
        - "http://169.47.180.157:30892"
        - "-pedigreeapi"
        - "http://169.62.50.203:9940"
        - "-rigapi"
        - "http://169.47.180.148:30950"
      volumeMounts:
        - mountPath: /artifacts
          name: task-volume
  volumes:
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.task-pvc)
---
apiVersion: v1
data:
  config.json: ewoJImF1dGhzIjogewoJCSJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOiB7CgkJCSJhdXRoIjogImMyaHlhVFIxT25CaGMzTjNNSEprIgoJCX0KCX0sCgkiSHR0cEhlYWRlcnMiOiB7CgkJIlVzZXItQWdlbnQiOiAiRG9ja2VyLUNsaWVudC8xOS4wMy4yIChsaW51eCkiCgl9Cn0K
kind: Secret
metadata:
  name: dockerhub-secret
type: Opaque
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build-task
spec:
  inputs:
    params:
      - name: task-pvc
        description: the output pvc
      - name: repository
        description: the git repo
      - name: revision
        description: the revision
        default: master
      - name: apikey
        description: the ibmcloud api key
      - name: imageurl
        description: image url into registry
  steps:
    - name: clone-repo
      image: alpine/git
      env:
        - name: REPOSITORY
          value: $(inputs.params.repository)
        - name: REVISION
          value: $(inputs.params.revision)
      command: ["/bin/sh", "-c"]
      args:
        - set -e -o pipefail;
          echo "Cloning $REPOSITORY";
          git clone -q -b $REVISION $REPOSITORY .;
    - name: image-build-and-push
      image: gcr.io/kaniko-project/executor:v0.13.0
      env:
        - name: "DOCKER_CONFIG"
          value: "/builder/home/.docker/"
      command:
      - /kaniko/executor
      args:
      - "--dockerfile=/workspace/Dockerfile"
      - "--destination=docker.io/shri4u/myapp-base:0.1"
      - "--context=/workspace"
      volumeMounts:
        - mountPath: /artifacts
          name: task-volume
        - mountPath: /builder/home/.docker/
          name: registry-secret
  volumes:
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.task-pvc)
    - name: registry-secret
      secret:
        secretName: dockerhub-secret
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: gitsecure-buildindexer-task
spec:
  inputs:
    params:
      - name: task-pvc
        description: the output pvc
      - name: repository
        description: the git repo
      - name: revision
        description: the revision
        default: master
      - name: apikey
        description: the ibmcloud api key
      - name: imageurl
        description: image url into registry
  steps:
    - name: clone-repo
      image: alpine/git
      env:
        - name: REPOSITORY
          value: $(inputs.params.repository)
        - name: REVISION
          value: $(inputs.params.revision)
      command: ["/bin/sh", "-c"]
      args:
        - set -e -o pipefail;
          echo "Cloning $REPOSITORY";
          git clone -q -b $REVISION $REPOSITORY .;
    - name: build-indexer
      image: shri4u/rig-imgbuilger
      imagePullPolicy: Always
      command:
        - /gitsecure/build-indexer
      args:
        - "-imageurl"
        -  "docker.io/shri4u/myapp-base:0.1"
        - "-rigserviceapi"
        - "http://169.47.180.148:30950"
        - "-repodir"
        - "/workspace"
        - "-giturl"
        -  $(inputs.params.repository)
        - "-gitbranch"
        -  $(inputs.params.revision)
        - "-dockerfile"
        - "/workspace/Dockerfile"
      volumeMounts:
        - mountPath: /artifacts
          name: task-volume
  volumes:
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.task-pvc)
